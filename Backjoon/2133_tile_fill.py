"""
backjoon_2133 - 타일 채우기 - G4

문제
- 3xN 크기의 벽을 2x1, 1x2 크기의 타일로 채우는 경우의 수를 구하는 문제

풀이
- 그려본결과
    - 홀수인 경우는 구할 수 없음
    - 짝수인 경우 2, 4, 6, ... 가능
    - 2인 경우 3가지
    - 4인 경우 2 2 조합과 +2
    - 6인 경우 2 2 2, 2 4, 4 2 조합과 +2

- 다시다시 생각
    - N = 2일 때는 무조건 3
    - N = 4일 때 부터 곂치는 구간 2개씩 추가
        - dp[4] = dp[2] * dp[2] + 2
    - N = 6일 때
        - dp[6] = dp[4] * dp[2] + 2
    - ...
    - 근데 답이 아니네...

- 다시 생각
    - 6일 때부터 추가되는 경우가 있다.
    - 뒤를 dp[2]로 채우는게 아니라 4, 6 한 덩어리로 채우는 경우
    
    - 예를 들어 n=6인 경우 뒤를 4로 채우는 경우 2가지에
    - 앞을 n-4=2로 채우는 경우 dp[2]를 곱한 값 더해주기 dp[n-4] * 2

풀이시간
- 2시간
"""

N = int(input())

if N % 2 != 0:
    print(0)
else:
    dp = [0 for _ in range(N + 1)]
    dp[2] = 3
    for n in range(4, N+1, 2):
        dp[n] = dp[n-2] * dp[2] + 2
        # 추가할 내용
        for j in range(2, n-2, 2): # 6부터 추가할 내용이 생긴다.
            dp[n] += dp[j] * 2
    print(dp[N])


# 이렇게 넣으면 인덱스 에러 (N이 2보다 작은 경우 문제생김 조심)
# dp = [0 for _ in range(N + 1)]
# dp[2] = 3
