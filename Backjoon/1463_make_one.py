"""
Backjoon_1463 - 1로 만들기 - S3

문제
- 정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.
    1. x가 3으로 나누어 떨어지면, 3으로 나눈다.
    2. x가 2로 나누어 떨어지면, 2로 나눈다.
    3. 1을 뺀다.
- 3가지 연산을 사용하여 1을 만들 때 횟수의 최솟값은?

풀이
- bfs로도 가능하지만 숫자가 커서 연산횟수가 크니까 DP를 사용한다.
- 2부터 시작하고 이전값을 이용해서 현재 횟수를 갱신한다.
- 2 또는 3으로 나누어지면 이전 값에 +1 한 값과 이전 결과에 +1 한 값 중 최솟값으로 갱신한다.
"""

N = int(input())
dp = [0] * (N+1)

for i in range(2, N+1):
    dp[i] = dp[i-1] + 1
    if i % 2 == 0:
        dp[i] = min(dp[i], dp[i//2] + 1)    # 나누기 2했을 때 + 1과 비교
    if i % 3 == 0:
        dp[i] = min(dp[i], dp[i//3] + 1)    # 나누기 3했을 때 + 1과 비교
print(dp[N])